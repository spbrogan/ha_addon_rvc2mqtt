#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the rvc2mqtt service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================


# Declare variables
declare interface
declare floorplan_file_path
delcare user_floorplan

declare host
declare port
declare username
declare password

# --- LOAD MQTT SETTINGS ---
bashio::log.debug "Setting MQTT details..."
if ! bashio::config.is_empty 'mqtt.host'; then
    host=$(bashio::config 'mqtt.host')
    port=$(bashio::config 'mqtt.port' 1883)
    username=$(bashio::config 'mqtt.username')
    password=$(bashio::config 'mqtt.password')
else
    host=$(bashio::services 'mqtt' 'host')
    port=$(bashio::services 'mqtt' 'port')
    username=$(bashio::services 'mqtt' 'username')
    password=$(bashio::services 'mqtt' 'password')
fi

export "MQTT_HOST=${host}"
export "MQTT_PORT=${port}"
export "MQTT_USERNAME=${username}"
export "MQTT_PASSWORD=${password}"

if bashio::config.exists 'mqtt.client_id'; then
    export "MQTT_CLIENT_ID=$(bashio::config 'mqtt.client_id')"
fi

if ! bashio::config.is_empty 'mqtt.ca'; then
    export "MQTT_CA=/ssl/$(bashio::config 'mqtt.ca')"
    
    if ! bashio::config.is_empty 'mqtt.cert'; then
        export "MQTT_CERT=$(bashio::config 'mqtt.cert')"
        export "MQTT_KEY=$(bashio::config 'mqtt.key')"
    fi
fi

## Get the values from the user config options.
if bashio::config.exists 'interface_name'; then
    export "CAN_INTERFACE_NAME=$(bashio::config 'interface_name')"
    bashio::log.info "Starting Up CanBus interface ${interface}"
    exec ip link set ${interface} type can bitrate 250000
    exec ip link set ${interface} up
fi

floorplan_file_path=$(bashio::config 'floorplan_file_path')
user_floorplan="/data/options.json"

# run the app
exec python3 -m rvc2mqtt.app -f ${floorplan_file_path} -g ${user_floorplan}
